{"version":3,"sources":["services/ItemCategoryServices.js","forms/ItemCategoryForm.jsx","services/listServices.js","common/imageInput.jsx","services/imageServices.js","common/input.jsx","common/select.jsx","common/dateInput.jsx","common/customForm.jsx"],"names":["endpoint","getItemCategorys","http","get","getItemCategory","id","deleteItemCategory","saveItemCategory","ItemCategory","post","ItemCategoryForm","Form","state","data","Id","CustomerId","CategoryTitle","ItemCategoryIdFKs","errors","schema","Joi","any","number","required","label","string","allow","mapToViewModel","x","doSubmit","a","itemCategory","props","history","push","toast","error","message","response","componentDidMount","Imported","YesNoWordList","itemCategoryId","match","params","setState","startsWith","substring","endsWith","result","Result","render","this","isView","CRUDType","defaultText","resourceId","onSubmit","handleSubmit","renderInput","renderButton","Name","LavelsList","setIntoCache","key","obj","localStorage","setItem","JSON","stringify","getFromCache","item","getItem","parse","mealboxEndpoint","Url","mealboxKey","mapMealBoxesToView","list","removeItem","map","MealBoxTitle","getMealBoxesName","MealBoxe","find","getMealBoxes","temp","length","console","log","cacheList","mealitemEndpoint","mealitemKey","mapMealItemsToView","ItemName","getMealItemsName","MealItem","getMealItems","spicelevelEndpoint","getSpiceLevels","itemcategoryEndpoint","mapCategoriesListToView","getItemCategories","sensitivecontentEndpoint","mapSensitiveContentsToView","SensitiveItem","getSensitiveContentsName","SensitiveContent","getSensitiveContents","ImageInput","imgSrc","name","onChange","onUpload","style","position","float","right","bottom","width","height","src","alt","color","type","onClick","className","imageUrl","saveImage","form","headers","fieldIcon","marginTop","zIndex","CheckBox","rest","htmlFor","replace","PasswordInput","React","useState","isVisible","setIsVisible","textType","placeholder","size","icon","faEyeSlash","faEye","InlineInput","hidden","Input","Select","options","value","option","DateInput","Component","setDate","date","selected","constructor","super","validate","abortEarly","details","path","validateProperty","handleChange","currentTarget","input","errorMessage","checked","handleDate","e","preventDefault","handleFileChange","files","target","URL","createObjectURL","handleFileUpload","FormData","forEach","file","append","success","Image","disabled","renderSelect","renderCheckBox","renderInlineInput","renderDatePicker","renderImagePicker"],"mappings":"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","file":"static/js/18.11ac41df.chunk.js","sourcesContent":["// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:18\r\nimport http from \"./httpService\";\r\n// import { apiLocal as Url, oDataLocal as oDataUrl } from \"../config.json\";\r\n\r\n// const url = `${endpoint}/ItemCategory`;\r\nconst endpoint = `/ItemCategory`;\r\n\r\nexport function getItemCategorys() {\r\n  return http.get(`${endpoint}/ItemCategorys`);\r\n}\r\n\r\nexport function getItemCategory(id) {\r\n  return http.get(`${endpoint}/ById?Id=${id}`);\r\n}\r\n\r\nexport function deleteItemCategory(id) {\r\n  return http.get(`${endpoint}/Delete?Id=${id}`);\r\n}\r\n\r\nexport function saveItemCategory(ItemCategory) {\r\n  return http.post(`${endpoint}/Create`, ItemCategory);\r\n}\r\n\r\nexport function filterItemCategory() {\r\n  let filterUrl = \"\";\r\n\r\n  const filterPrefix = \"?$filter=\";\r\n\r\n  if (filterUrl !== \"\") filterUrl = filterPrefix + filterUrl;\r\n\r\n  // console.log(oDataUrl + filterUrl);\r\n  return http.get(`odata/DUTasks${filterUrl}`);\r\n}\r\n","// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:18\r\nimport React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport Form from \"../common/customForm\";\r\nimport { getItemCategory, saveItemCategory } from \"../services/ItemCategoryServices\";\r\nimport { YesNoWordList } from \"../services/listServices\";\r\n\r\nimport TranslateText from \"../common/translateText\";\r\n\r\nclass ItemCategoryForm extends Form {\r\n  state = {\r\n    data: {\r\n      Id: \"\",\r\n      CustomerId: \"\",\r\n      CategoryTitle: \"\"\r\n    },\r\n    ItemCategoryIdFKs: [],\r\n\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    Id: Joi.any(),\r\n    CustomerId: Joi.number()\r\n      .required()\r\n      .label(\"Customer Id\"),\r\n    CategoryTitle: Joi.string().allow(\"\")\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const Imported = YesNoWordList();\r\n\r\n    const { id: itemCategoryId } = this.props.match.params;\r\n\r\n    this.setState({ Imported });\r\n    if (itemCategoryId.startsWith(\"view\") || itemCategoryId.startsWith(\"Assign\")) {\r\n      let id;\r\n      if (itemCategoryId.startsWith(\"view\")) {\r\n        id = itemCategoryId.substring(4);\r\n      }\r\n      if (itemCategoryId.startsWith(\"Assign\")) {\r\n        id = itemCategoryId.substring(6);\r\n      }\r\n      const isView = itemCategoryId.endsWith(\"&\");\r\n      let result;\r\n      if (isView) result = await getItemCategory(id);\r\n      // else result = await getTrackedVersion(id);\r\n      this.setState({ data: this.mapToViewModel(result.data.Result) });\r\n      return;\r\n    }\r\n    if (itemCategoryId === \"new\") return;\r\n    const { data } = await getItemCategory(itemCategoryId);\r\n    this.setState({ data: this.mapToViewModel(data.Result) });\r\n  }\r\n\r\n  mapToViewModel = x => {\r\n    return {\r\n      Id: x.Id,\r\n      CustomerId: x.CustomerId,\r\n      CategoryTitle: x.CategoryTitle\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    const itemCategory = { ...data };\r\n    // itemCategory.Imported = !!data.Imported;\r\n    try {\r\n      await saveItemCategory(itemCategory);\r\n      this.props.history.push(\"/itemCategory_list\");\r\n    } catch (err) {\r\n      toast.error(err.message || err.response.message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id: itemCategoryId } = this.props.match.params;\r\n    const isView = itemCategoryId.startsWith(\"view\");\r\n\r\n    const CRUDType = itemCategoryId === \"new\" ? \"Create\" : \"Update\";\r\n    return (\r\n      <div>\r\n        <h1>\r\n          {!isView && <TranslateText defaultText={CRUDType} resourceId={`lbl_${CRUDType}`} />}\r\n\r\n          <TranslateText defaultText=\" Item Category\" resourceId=\"lbl_ItemCategory\" />\r\n        </h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {/* {this.renderInput(\"Id\", \"Id\")} */}\r\n          {this.renderInput(\"CustomerId\", \"Customer Id\")}\r\n          {this.renderInput(\"CategoryTitle\", \"Category Title\")}\r\n          {!isView && this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemCategoryForm;\r\n","// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:21\r\n// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:21\r\n// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:20\r\n// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:20\r\n// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:19\r\n// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:19\r\n// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:18\r\nimport http from \"./httpService\";\r\nimport { serverURL as Url } from \"../config.json\";\r\n\r\nexport function YesNoWordList() {\r\n  return [\r\n    { Id: 0, Name: \"No\" },\r\n    { Id: 1, Name: \"Yes\" }\r\n  ];\r\n}\r\nexport function LavelsList() {\r\n  return [\r\n    { Id: 1, Name: \"Low\" },\r\n    { Id: 2, Name: \"Normal\" },\r\n    { Id: 3, Name: \"High\" },\r\n    { Id: 4, Name: \"Very High\" }\r\n  ];\r\n}\r\n\r\nfunction setIntoCache(key, obj) {\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\n  return obj;\r\n}\r\n\r\nfunction getFromCache(key) {\r\n  // TODO, please add some logic so that cache is expired after half an hour or so\r\n  // so that if new values are added at the backend cache should refresh after expiry and\r\n  // get new values in, if we dont expire or refresh cache then new values added to table\r\n  // after the first call will never show up\r\n  const item = localStorage.getItem(key);\r\n  return JSON.parse(item);\r\n}\r\n\r\nconst mealboxEndpoint = `${Url}/MealBox`;\r\nconst mealboxKey = \"____mealboxes____\";\r\nfunction mapMealBoxesToView(list) {\r\n  localStorage.removeItem(list);\r\n  return list.map(x => ({ Id: x.Id, Name: x.MealBoxTitle }));\r\n}\r\nexport function getMealBoxesName(id) {\r\n  if (!id) return \"\";\r\n  const MealBoxes = getFromCache(mealboxKey);\r\n  const MealBoxe = MealBoxes.find(x => x.Id == id);\r\n  if (!MealBoxe) return id;\r\n  return MealBoxe.Name;\r\n}\r\nexport async function getMealBoxes() {\r\n  const temp = getFromCache(mealboxKey);\r\n  if (temp && temp.length) return temp;\r\n  const response = await http.get(`${mealboxEndpoint}/MealBoxs`);\r\n  console.log(\"TCL: getMealBoxes -> response.data.Result\", response.data.Result);\r\n  const cacheList = mapMealBoxesToView(response.data.Result);\r\n\r\n  return setIntoCache(mealboxKey, cacheList);\r\n}\r\nconst mealitemEndpoint = `${Url}/MealItem`;\r\nconst mealitemKey = \"____mealitems____\";\r\nfunction mapMealItemsToView(list) {\r\n  localStorage.removeItem(list);\r\n  return list.map(x => ({ Id: x.Id, Name: x.ItemName }));\r\n}\r\nexport function getMealItemsName(id) {\r\n  if (!id) return \"\";\r\n  const MealItems = getFromCache(mealitemKey);\r\n  const MealItem = MealItems.find(x => x.Id == id);\r\n  if (!MealItem) return id;\r\n  return MealItem.Name;\r\n}\r\nexport async function getMealItems() {\r\n  const temp = getFromCache(mealitemKey);\r\n  if (temp && temp.length) return temp;\r\n  const response = await http.get(`${mealitemEndpoint}/MealItems`);\r\n  const cacheList = mapMealItemsToView(response.data.Result);\r\n\r\n  console.log(\"TCL: getMealItems -> response.data.Result\", response.data.Result);\r\n  return setIntoCache(mealitemKey, cacheList);\r\n}\r\nconst spicelevelEndpoint = `${Url}/SpiceLevel`;\r\nconst spicelevelKey = \"____spicelevels____\";\r\nexport async function getSpiceLevels() {\r\n  const temp = getFromCache(spicelevelKey);\r\n  if (temp && temp.length) return temp;\r\n  const response = await http.get(`${spicelevelEndpoint}/SpiceLevels`);\r\n  return setIntoCache(spicelevelKey, response.data.Result);\r\n}\r\nconst itemcategoryEndpoint = `${Url}/ItemCategory`;\r\n\r\nconst itemcategoryKey = \"____itemcategories____\";\r\n// export function getExpenseProjectName(id) {\r\n//   if (!id) return \"\";\r\n//   const categorys = Cache.getCache(itemcategoryKey);\r\n//   // const category = _.find(categorys, { Id: id });\r\n//   // eslint-disable-next-line eqeqeq\r\n//   const category = categorys.find(x => x.Id == id);\r\n//   if (!category) return id;\r\n//   return category.ProjectName;\r\n// }\r\nfunction mapCategoriesListToView(list) {\r\n  localStorage.removeItem(list);\r\n  return list.map(x => ({ Id: x.Id, Name: x.CategoryTitle }));\r\n}\r\nexport async function getItemCategories() {\r\n  const temp = getFromCache(itemcategoryKey);\r\n  if (temp && temp.length) return temp;\r\n  const response = await http.get(`${itemcategoryEndpoint}/ItemCategorys`);\r\n  console.log(\"TCL: getItemCategories -> response\", response);\r\n  const cacheList = mapCategoriesListToView(response.data.Result);\r\n\r\n  return setIntoCache(itemcategoryKey, cacheList);\r\n}\r\nconst sensitivecontentEndpoint = `${Url}/SensitiveContent`;\r\nconst sensitivecontentKey = \"____sensitivecontents____\";\r\nfunction mapSensitiveContentsToView(list) {\r\n  localStorage.removeItem(list);\r\n  return list.map(x => ({ Id: x.Id, Name: x.SensitiveItem }));\r\n}\r\nexport function getSensitiveContentsName(id) {\r\n  if (!id) return \"\";\r\n  const SensitiveContents = getFromCache(sensitivecontentKey);\r\n  // const category = _.find(categorys, { Id: id });\r\n  // eslint-disable-next-line eqeqeq\r\n  const SensitiveContent = SensitiveContents.find(x => x.Id == id);\r\n  if (!SensitiveContent) return id;\r\n  return SensitiveContent.Name;\r\n}\r\nexport async function getSensitiveContents() {\r\n  const temp = getFromCache(sensitivecontentKey);\r\n  if (temp && temp.length) return temp;\r\n  const response = await http.get(`${sensitivecontentEndpoint}/SensitiveContents`);\r\n  const cacheList = mapSensitiveContentsToView(response.data.Result);\r\n\r\n  return setIntoCache(sensitivecontentKey, cacheList);\r\n}\r\n// [PFB_CreateForeignKeyApiCall]\r\n","import React from \"react\";\r\nimport TranslateText from \"./translateText\";\r\n\r\nconst ImageInput = ({ imgSrc, name, onChange, onUpload, error }) => (\r\n  <div\r\n    style={{\r\n      position: \"relative\",\r\n      float: \"right\",\r\n      right: 0,\r\n      bottom: 120,\r\n      width: 100,\r\n      height: 150\r\n    }}\r\n  >\r\n    <img\r\n      src={imgSrc}\r\n      style={{ height: \"100px\", width: \"100px\" }}\r\n      alt={imgSrc}\r\n    />\r\n    <input\r\n      style={{ color: \"transparent\" }}\r\n      type=\"file\"\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n    <button type=\"submit\" onClick={onUpload}>\r\n      <TranslateText defaultText=\"Upload\" resourceId=\"lbl_Upload\" />\r\n    </button>\r\n    {error && <div className=\"alert alert-danger\">{error}</div>}\r\n  </div>\r\n);\r\nexport default ImageInput;\r\n","import http from \"./httpService\";\r\nimport { localURL as Url } from \"../config.json\";\r\n\r\nconst imageUrl = `${Url}/Image`;\r\n\r\nexport function getImages() {\r\n  return http.get(`${imageUrl}/Images`);\r\n}\r\n\r\nexport function getImage(id) {\r\n  return http.get(`${imageUrl}/byId?Id=${id}`);\r\n}\r\n\r\nexport function deleteImage(id) {\r\n  return http.get(`${imageUrl}/Delete?Id=${id}`);\r\n}\r\n\r\nexport function saveImage(form) {\r\n  return http.post(`${imageUrl}/File`, form, {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\"\r\n    }\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { FormGroup, Label, Input as InputStrap, Row, Col } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TranslateText from \"./translateText\";\r\n\r\nconst fieldIcon = {\r\n  float: \"right\",\r\n  marginTop: \"-35px\",\r\n  position: \"relative\",\r\n  zIndex: 2\r\n};\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>\r\n        <TranslateText defaultText={label} resourceId={label.replace(/\\s+/g, \"_\")} />\r\n      </label>\r\n      <input {...rest} id={name} name={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CheckBox = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <Row>\r\n        <Col>\r\n          <label htmlFor={name}>\r\n            <TranslateText defaultText={label} resourceId={label.replace(/\\s+/g, \"_\")} />\r\n          </label>\r\n        </Col>\r\n        <Col>\r\n          <input {...rest} type=\"checkbox\" id={name} name={name} className=\"form-check-input\" />\r\n        </Col>\r\n      </Row>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nexport const PasswordInput = ({ name, label, error, type, ...rest }) => {\r\n  const [isVisible, setIsVisible] = React.useState(false);\r\n  const textType = isVisible ? \"text\" : type;\r\n  return (\r\n    <>\r\n      <label htmlFor={name} className=\"sr-only\">\r\n        {label}\r\n      </label>\r\n      <div>\r\n        <input {...rest} type={textType} id={name} name={name} placeholder={label} className=\"form-control\" />\r\n        {type === \"password\" ? (\r\n          <FontAwesomeIcon\r\n            style={fieldIcon}\r\n            onClick={() => setIsVisible(!isVisible)}\r\n            size=\"1x\"\r\n            color=\"gray\"\r\n            className=\"mr-3\"\r\n            icon={isVisible ? faEyeSlash : faEye}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\nexport const InlineInput = ({ name, placeholder, error, ...rest }) => {\r\n  return (\r\n    <FormGroup>\r\n      <Label htmlFor={name} hidden>\r\n        <TranslateText defaultText={placeholder} resourceId={placeholder.replace(/\\s+/g, \"_\")} />\r\n      </Label>\r\n      <InputStrap {...rest} type=\"text\" name={name} id={name} placeholder={placeholder} />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport TranslateText from \"./translateText\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>\r\n        <TranslateText defaultText={label} resourceId={label.replace(/\\s+/g, \"_\")} />\r\n      </label>\r\n      <select {...rest} id={name} name={name} className=\"form-control\">\r\n        <option value=\"0\">...select...</option>\r\n        {options.map(option => (\r\n          <option key={option.Id} value={option.Id}>\r\n            {option.Name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport TranslateText from \"./translateText\";\r\n\r\nclass DateInput extends Component {\r\n  setDate = date => {\r\n    this.props.onChange(this.props.name, date);\r\n  };\r\n\r\n  render() {\r\n    const { name, placeholder, value, error } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>\r\n          <TranslateText\r\n            defaultText={placeholder}\r\n            resourceId={placeholder.replace(/\\s+/g, \"_\")}\r\n          />\r\n        </label>\r\n        <DatePicker\r\n          id={name}\r\n          name={name}\r\n          selected={value}\r\n          onChange={this.setDate}\r\n          className=\"form-control\"\r\n        />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateInput;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport ImageInput from \"./imageInput\";\r\nimport { saveImage } from \"../services/imageServices\";\r\nimport Input, { InlineInput, CheckBox } from \"./input\";\r\nimport Select from \"./select\";\r\nimport DateInput from \"./dateInput\";\r\nimport TranslateText from \"./translateText\";\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: true };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = error.details.map(x => {\r\n      const [i] = x.path;\r\n      return { [i]: x.message };\r\n    });\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    const value = input.type === \"checkbox\" ? input.checked : input.value;\r\n    data[input.name] = value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  handleDate = (name, date) => {\r\n    const { data } = this.state;\r\n    data[name] = date;\r\n    console.log(\"show Date in form\", name, date);\r\n    this.setState({\r\n      data\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault(); // prevent the default page reload behaviour of form\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return; // don't proceed with form submission\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleFileChange = e => {\r\n    const files = e.target.files[0];\r\n    this.setState({\r\n      ...this.state.state,\r\n      files,\r\n      imgSrc: URL.createObjectURL(files)\r\n    });\r\n  };\r\n\r\n  handleFileUpload = async e => {\r\n    e.preventDefault();\r\n    const { files } = this.state;\r\n    const form = new FormData();\r\n\r\n    files.forEach(file => form.append(\"file\", file));\r\n\r\n    const { data } = await saveImage(form);\r\n    let message = \"Success!\";\r\n    if (!data.success) {\r\n      message = data.message;\r\n    }\r\n    const errors = this.state;\r\n    errors.Image = message;\r\n    this.setState({\r\n      ...files,\r\n      errors,\r\n      Image: data.Id\r\n    });\r\n  };\r\n\r\n  renderButton = label => {\r\n    return (\r\n      <button type=\"submit\" disabled={this.validate()} className=\"btn btn-primary m-1\">\r\n        <TranslateText defaultText={label} resourceId={label.replace(/\\s+/g, \"_\")} />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        options={options}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n  renderCheckBox = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <CheckBox\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderInlineInput = (name, placeholder, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <InlineInput\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderDatePicker = (name, placeholder, value) => {\r\n    const { errors } = this.state;\r\n    return (\r\n      <DateInput name={name} placeholder={placeholder} value={value} onChange={this.handleDate} errors={errors[name]} />\r\n    );\r\n  };\r\n\r\n  renderImagePicker = name => {\r\n    const { errors, imgSrc } = this.state;\r\n    return (\r\n      <ImageInput\r\n        imgSrc={imgSrc}\r\n        name={name}\r\n        onChange={this.handleFileChange}\r\n        onUpload={this.handleFileUpload}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n"],"sourceRoot":""}