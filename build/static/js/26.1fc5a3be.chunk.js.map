{"version":3,"sources":["components/changesTable.jsx","services/changeServices.js","components/changes_list.jsx","utils/paginate.js","common/tableHeader.jsx","common/tableBody.jsx","common/table.jsx","components/buttonPanel.jsx","common/pagination.jsx","forms/searchForm.jsx"],"names":["ProductsTable","Component","columns","property","label","content","change","IsDeleted","TransactionDate","moment","fromNow","render","this","props","changes","onSort","sortColumn","onSelect","selected","onView","console","log","data","endPoint","getChanges","objectName","id","params","http","get","deleteChange","ChangesListView","constructor","super","handleDelete","a","originalChanges","state","filter","c","Id","setState","response","status","handlePageChange","page","currentPage","handleSort","handleSelect","handleEdit","history","push","handleAdd","handleSearch","value","keys","toLowerCase","split","map","e","getPagedData","pageSize","allChanges","searchName","searchCategory","filtered","filteredResult","sorted","_","orderBy","path","order","paginate","totalCount","length","componentDidMount","match","boName","Result","Card","CardHeader","onDoubleClick","Row","Col","className","icon","faListAlt","style","fontSize","fontWeight","defaultText","resourceId","xs","md","onSearch","onEdit","onAdd","onDelete","CardBody","handleView","onExport","handleExport","itemsCount","onPageChange","items","pageNumber","startIndex","slice","take","TableHeader","raiseSort","renderSortIcon","column","faSortUp","faSortDown","key","onClick","TableBody","renderCell","item","createKey","renderStyle","isSelected","backgroundColor","Table","size","hover","responsive","borderless","ButtonPanel","onDownload","onTrackChanges","show","Download","useState","isOpen","setIsOpen","outline","hidden","faPlus","toggle","disabled","caret","faEdit","faEye","faFileDownload","faTrash","divider","faFileExport","Pagination","pageCount","Math","ceil","pages","range","margin","p","role","href","SearchForm","setValue","placeholder","onChange","target","onKeyDown","keyCode"],"mappings":"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","file":"static/js/26.1fc5a3be.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport Table from \"../common/table\";\r\n\r\nclass ProductsTable extends Component {\r\n  columns = [\r\n    {\r\n      property: \"UserId\",\r\n      label: \"User ID\"\r\n    },\r\n    {\r\n      property: \"ObjectName\",\r\n      label: \"Object Name\"\r\n    },\r\n    {\r\n      property: \"TransactionType\",\r\n      label: \"Transaction Type\"\r\n    },\r\n    {\r\n      property: \"IsDeleted\",\r\n      label: \"Deleted\",\r\n\r\n      content: change => (change.IsDeleted && change.IsDeleted ? \"Yes\" : \"No\")\r\n    },\r\n    {\r\n      property: \"TransactionDate\",\r\n      label: \"Transaction Date\",\r\n      content: change => change.TransactionDate && moment(change.TransactionDate).fromNow()\r\n    },\r\n    {\r\n      property: \"Version\",\r\n      label: \"Version\"\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    const { changes, onSort, sortColumn, onSelect, selected, onView } = this.props;\r\n    console.log(changes);\r\n\r\n    return (\r\n      <Table\r\n        selected={selected}\r\n        columns={this.columns}\r\n        data={changes}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        onSelect={onSelect}\r\n        onView={onView}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsTable;\r\n","import http from \"./httpService\";\r\nimport { oDataLocal as oDataUrl } from \"../config.json\";\r\n\r\nconst endPoint = `/ChangeTracking/`;\r\nexport function getChanges(objectName, id) {\r\n  const params = `ObjectName=${objectName}&Id=${id}`;\r\n  return http.get(`ChangeTracking/GetObjectHistory?${params}`);\r\n}\r\n\r\nexport function getChange(id) {\r\n  return http.get(`${endPoint}/ById?Id=${id}`);\r\n}\r\n\r\nexport function deleteChange(id) {\r\n  return http.get(`${endPoint}/Delete?Id=${id}`);\r\n}\r\n\r\nexport function saveChange(change) {\r\n  return http.post(`${endPoint}/Create`, change);\r\n}\r\n\r\nexport function filterChange(name, category) {\r\n  let filterUrl = \"\";\r\n  if (name !== \"\" && name !== null) {\r\n    if (filterUrl === \"\") filterUrl = \"?$filter=\";\r\n    filterUrl += `startswith(Name, '${name}')`;\r\n  }\r\n  if (category !== \"\" && category !== null) {\r\n    if (filterUrl === \"\") filterUrl = \"?$filter=\";\r\n    else filterUrl += \"and \";\r\n    filterUrl += `Category eq ${category}`;\r\n  }\r\n  return http.get(oDataUrl + filterUrl);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\r\nimport _ from \"lodash\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ButtonPanel from \"./buttonPanel\";\r\nimport paginate from \"../utils/paginate\";\r\nimport Pagination from \"../common/pagination\";\r\nimport SearchForm from \"../forms/searchForm\";\r\nimport ChangesTable from \"./changesTable\";\r\nimport { deleteChange, getChanges } from \"../services/changeServices\";\r\nimport TranslateText from \"../common/translateText\";\r\n\r\nclass ChangesListView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pageSize: 5,\r\n      currentPage: 1,\r\n      sortColumn: { path: \"Id\", order: \"asc\" }, // Default Sort Column\r\n      changes: [], // PFB_DeclareDataItemCollection\r\n      searchName: \"\", // PFB_SearchColumns\r\n      searchCategory: \"\",\r\n      selected: -1\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id, boName } = this.props.match.params;\r\n    const { data } = await getChanges(boName, id);\r\n    this.setState({\r\n      changes: data.Result\r\n    });\r\n  }\r\n\r\n  handleDelete = async id => {\r\n    const originalChanges = this.state.changes;\r\n    const changes = originalChanges.filter(c => c.Id !== id);\r\n    this.setState({ changes });\r\n\r\n    const { data: response } = await deleteChange(id);\r\n    if (response.status >= 400 && response.status < 500) this.setState({ changes: originalChanges });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSelect = id => {\r\n    this.setState({ selected: id });\r\n  };\r\n\r\n  handleEdit = id => {\r\n    this.props.history.push(`change_list/${id}`);\r\n  };\r\n\r\n  handleAdd = () => {\r\n    this.props.history.push(\"change_list/new\");\r\n  };\r\n\r\n  handleSearch = value => {\r\n    const str = value.toLowerCase().split(\" \");\r\n    const keys = str.map(e => e.split(\":\"));\r\n\r\n    console.log(`${keys[0][0]}:${keys[0][1]}`);\r\n    console.log(`${keys[1][0]}:${keys[1][1]}`);\r\n\r\n    // const words = value.split(\" \");\r\n    // this.setState({\r\n    //   searchName: words[0],\r\n    //   searchCategory: words[1],\r\n    //   currentPage: 1\r\n    // });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const { pageSize, currentPage, sortColumn, changes: allChanges, searchName, searchCategory } = this.state;\r\n\r\n    const filtered = allChanges;\r\n    if (searchName !== null || searchCategory !== null) this.filteredResult();\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const changes = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: changes };\r\n  };\r\n\r\n  async filteredResult() {\r\n    const { data: response } = await getChanges();\r\n    this.setState({\r\n      changes: response.Result,\r\n      searchName: null,\r\n      searchCategory: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { pageSize, currentPage, sortColumn, selected } = this.state;\r\n\r\n    const { totalCount, data: changes } = this.getPagedData();\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardHeader onDoubleClick={() => this.handleSelect(-1)}>\r\n            <Row>\r\n              <Col className=\"float-left\">\r\n                <FontAwesomeIcon icon={faListAlt} />\r\n                <span className=\"ml-2\" style={{ fontSize: \"1rem\", fontWeight: 600 }}>\r\n                  <TranslateText defaultText=\"Changes\" resourceId=\"lbl_Changes\" />\r\n                  <br />\r\n                  {totalCount}\r\n                  <TranslateText defaultText=\"found\" resourceId=\"lbl_found\" />\r\n                </span>\r\n              </Col>\r\n              <Col xs=\"*\" md=\"8\">\r\n                <SearchForm onSearch={this.handleSearch} />\r\n              </Col>\r\n              <Col>\r\n                <ButtonPanel\r\n                  id={selected}\r\n                  onEdit={this.handleEdit}\r\n                  onAdd={this.handleAdd}\r\n                  onDelete={this.handleDelete}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <ChangesTable\r\n              changes={changes}\r\n              selected={selected}\r\n              sortColumn={sortColumn}\r\n              onSort={this.handleSort}\r\n              onView={this.handleView}\r\n              onDelete={this.handleDelete}\r\n              onExport={this.handleExport}\r\n              onSelect={this.handleSelect}\r\n            />\r\n          </CardBody>\r\n          <Pagination\r\n            itemsCount={totalCount || 0}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ChangesListView;\r\n","import _ from \"lodash\";\r\n\r\nexport default function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = property => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.property === property)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.property = property;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.property !== sortColumn.property) return null;\r\n    if (sortColumn.order === \"asc\") return <FontAwesomeIcon icon={faSortUp} />;\r\n    return <FontAwesomeIcon icon={faSortDown} />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable text-left\"\r\n              key={column.property || column.key}\r\n              onClick={() => this.raiseSort(column.property)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.property);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item.Id + (column.property || column.key);\r\n  };\r\n\r\n  renderStyle = isSelected => {\r\n    if (isSelected) return { backgroundColor: \"skyblue\" };\r\n\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    const { data, columns, selected, onSelect, onView } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr\r\n            key={item.Id}\r\n            className=\"clickable\"\r\n            style={this.renderStyle(selected === item.Id)}\r\n            onClick={() => onSelect(item.Id)}\r\n            onDoubleClick={() => onView(item.Id)}\r\n          >\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)} className=\"text-left\">\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport { Table as BSTable } from \"reactstrap\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({\r\n  columns,\r\n  sortColumn,\r\n  onSort,\r\n  data,\r\n  selected,\r\n  onSelect,\r\n  onView\r\n}) => {\r\n  return (\r\n    <BSTable size=\"sm\" hover responsive borderless>\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody\r\n        data={data}\r\n        columns={columns}\r\n        selected={selected}\r\n        onView={onView}\r\n        onSelect={onSelect}\r\n      />\r\n    </BSTable>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","/* eslint-disable no-return-assign */\r\nimport React, { useState } from \"react\";\r\nimport { Button, ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, ButtonGroup } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faEdit, faTrash, faFileDownload, faEye, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TranslateText from \"../common/translateText\";\r\n\r\nconst ButtonPanel = ({ id, onAdd, onView, onEdit, onDelete, onExport, onDownload, onTrackChanges, show, Download }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <ButtonGroup className=\"float-right\">\r\n        {show === \"false\" && (\r\n          <Button outline onClick={() => onAdd()} hidden={id > 0}>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </Button>\r\n        )}\r\n        <ButtonDropdown isOpen={isOpen} toggle={() => setIsOpen(!isOpen)}>\r\n          <DropdownToggle disabled={id < 0} outline caret>\r\n            <TranslateText defaultText=\"More\" resourceId=\"lbl_More\" />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            {show === \"false\" && (\r\n              <DropdownItem onClick={() => onEdit(id)} disabled={id < 0}>\r\n                <FontAwesomeIcon icon={faEdit} className=\"mr-3\" />\r\n                <TranslateText defaultText=\"Edit\" resourceId=\"lbl_Edit\" />\r\n              </DropdownItem>\r\n            )}\r\n\r\n            {show === \"false\" && (\r\n              <DropdownItem onClick={() => onView(id)} disabled={id < 0}>\r\n                <FontAwesomeIcon icon={faEye} className=\"mr-3\" />\r\n                <TranslateText defaultText=\"View\" resourceId=\"lbl_View\" />\r\n              </DropdownItem>\r\n            )}\r\n\r\n            {Download && (\r\n              <DropdownItem onClick={() => onDownload(id)} disabled={id < 0}>\r\n                <FontAwesomeIcon icon={faFileDownload} className=\"mr-3\" />\r\n                <TranslateText defaultText=\"Download\" resourceId=\"lbl_Download\" />\r\n              </DropdownItem>\r\n            )}\r\n            {\r\n              (show = \"false\" && (\r\n                <DropdownItem onClick={() => onDelete(id)} disabled={id < 0}>\r\n                  <FontAwesomeIcon icon={faTrash} className=\"mr-3\" />\r\n                  <TranslateText defaultText=\"Delete\" resourceId=\"lbl_Delete\" />\r\n                </DropdownItem>\r\n              ))\r\n            }\r\n\r\n            <DropdownItem divider />\r\n            {show === \"false\" && (\r\n              <DropdownItem onClick={() => onExport(id)} disabled={id < 0}>\r\n                <FontAwesomeIcon icon={faFileExport} className=\"mr-3\" />\r\n                <TranslateText defaultText=\"Export\" resourceId=\"lbl_Export\" />\r\n              </DropdownItem>\r\n            )}\r\n\r\n            {show === \"false\" && (\r\n              <DropdownItem onClick={() => onTrackChanges(id)} disabled={id < 0}>\r\n                <FontAwesomeIcon icon={faEdit} className=\"mr-3\" />\r\n                <TranslateText defaultText=\"Track Changes\" resourceId=\"lbl_Track_Changes\" />\r\n              </DropdownItem>\r\n            )}\r\n          </DropdownMenu>\r\n        </ButtonDropdown>\r\n      </ButtonGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonPanel;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  return (\r\n    <nav style={{ margin: \"auto\" }}>\r\n      <ul className=\"pagination\">\r\n        {pages.map(p => (\r\n          <li\r\n            key={p}\r\n            className={p === currentPage ? \"page-item active\" : \"page-item\"}\r\n            onClick={() => onPageChange(p)}\r\n            role=\"presentation\"\r\n          >\r\n            <a className=\"page-link\" href={`#${p}`}>\r\n              {p}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nconst SearchForm = ({ onSearch }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const raiseSearch = e => {\r\n    if (e.keyCode === 13) onSearch(value);\r\n  };\r\n  return (\r\n    <>\r\n      <Input\r\n        placeholder=\"Search\"\r\n        onChange={e => setValue(e.target.value)}\r\n        onKeyDown={raiseSearch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n"],"sourceRoot":""}