{"version":3,"sources":["services/mealItemServices.js","forms/mealItemForm.jsx"],"names":["getMealItems","http","get","getMealItem","id","deleteMealItem","saveMealItem","MealItem","post","MealItemForm","Form","state","data","Id","CustomerId","SpiceLevelIdFK","ItemCategoryIdFK","ItemName","ItemPrice","CaloriesCount","Description","IsVegetarian","IsHalal","spicelevels","Lavels","itemcategories","Imported","errors","schema","Joi","any","label","number","required","string","allow","bool","mapToViewModel","x","doSubmit","a","mealItem","props","history","push","toast","error","message","response","componentDidMount","YesNoWordList","localStorage","removeItem","mealItemId","match","params","axios","all","getItemCategories","getSpiceLevels","setState","startsWith","substring","endsWith","result","Result","render","this","isView","CRUDType","defaultText","resourceId","onSubmit","handleSubmit","renderInput","renderCheckBox","renderSelect","renderButton","RecordId","ModuleName","path"],"mappings":"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","file":"static/js/29.fa491073.chunk.js","sourcesContent":["// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:20\r\nimport http from \"./httpService\";\r\n// import { apiLocal as Url, oDataLocal as oDataUrl } from \"../config.json\";\r\n\r\n// const url = `${endpoint}/MealItem`;\r\nconst endpoint = `/MealItem`;\r\n\r\nexport function getMealItems() {\r\n  return http.get(`${endpoint}/MealItems`);\r\n}\r\n\r\nexport function getMealItem(id) {\r\n  return http.get(`${endpoint}/ById?Id=${id}`);\r\n}\r\n\r\nexport function deleteMealItem(id) {\r\n  return http.get(`${endpoint}/Delete?Id=${id}`);\r\n}\r\n\r\nexport function saveMealItem(MealItem) {\r\n  return http.post(`${endpoint}/Create`, MealItem);\r\n}\r\n\r\nexport function filterMealItem(\r\n  itemname,\r\n  itemprice,\r\n  caloriescount,\r\n  isvegetarian,\r\n  ishalal\r\n) {\r\n  let filterUrl = \"\";\r\n\r\n  if (itemname !== \"\" && itemname !== null) {\r\n    if (filterUrl !== \"\") filterUrl += \"and \";\r\n\r\n    filterUrl += `startswith(name, '${itemname}')`;\r\n  }\r\n\r\n  if (itemprice !== \"\" && itemprice !== null) {\r\n    if (filterUrl !== \"\") filterUrl += \"and \";\r\n\r\n    filterUrl += `ItemPrice eq ${itemprice}`;\r\n  }\r\n\r\n  if (caloriescount !== \"\" && caloriescount !== null) {\r\n    if (filterUrl !== \"\") filterUrl += \"and \";\r\n\r\n    filterUrl += `CaloriesCount eq ${caloriescount}`;\r\n  }\r\n\r\n  if (isvegetarian !== \"\" && isvegetarian !== null) {\r\n    if (filterUrl !== \"\") filterUrl += \"and \";\r\n\r\n    filterUrl += \"\";\r\n  }\r\n\r\n  if (ishalal !== \"\" && ishalal !== null) {\r\n    if (filterUrl !== \"\") filterUrl += \"and \";\r\n\r\n    filterUrl += \"\";\r\n  }\r\n\r\n  const filterPrefix = \"?$filter=\";\r\n\r\n  if (filterUrl !== \"\") filterUrl = filterPrefix + filterUrl;\r\n\r\n  // console.log(oDataUrl + filterUrl);\r\n  return http.get(`odata/DUTasks${filterUrl}`);\r\n}\r\n","// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:20\r\nimport React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport Form from \"../common/customForm\";\r\nimport Attachment from \"./DUTaskAttachmentForm\";\r\nimport AttachmentList from \"../components/NewAttachmentTable\";\r\nimport { getMealItem, saveMealItem } from \"../services/mealItemServices\";\r\nimport { getItemCategories, getSpiceLevels, YesNoWordList } from \"../services/listServices\";\r\n\r\nimport TranslateText from \"../common/translateText\";\r\n\r\nclass MealItemForm extends Form {\r\n  state = {\r\n    data: {\r\n      Id: \"\",\r\n      CustomerId: \"\",\r\n      SpiceLevelIdFK: \"\",\r\n      ItemCategoryIdFK: \"\",\r\n      ItemName: \"\",\r\n      ItemPrice: \"\",\r\n      CaloriesCount: \"\",\r\n      Description: \"\",\r\n      IsVegetarian: \"\",\r\n      IsHalal: \"\"\r\n    },\r\n    spicelevels: [],\r\n    Lavels: [],\r\n    itemcategories: [],\r\n    Imported: [],\r\n\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    Id: Joi.any().label(\"Id\"),\r\n    CustomerId: Joi.number()\r\n      .required()\r\n      .label(\"Customer Id\"),\r\n    SpiceLevelIdFK: Joi.number()\r\n      .required()\r\n      .label(\"Spice Level Id F K\"),\r\n    ItemCategoryIdFK: Joi.number()\r\n      .required()\r\n      .label(\"Item Category Id F K\"),\r\n    ItemName: Joi.string().allow(\"\"),\r\n    ItemPrice: Joi.number()\r\n      .required()\r\n      .label(\"Item Price\"),\r\n    CaloriesCount: Joi.number()\r\n      .required()\r\n      .label(\"Calories Count\"),\r\n    Description: Joi.string().allow(\"\"),\r\n    IsVegetarian: Joi.bool().allow(\"\"),\r\n    IsHalal: Joi.bool().allow(\"\")\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const Imported = YesNoWordList();\r\n    const itemcategoryKey = \"____itemcategories____\";\r\n    const spicelevelKey = \"____spicelevels____\";\r\n    localStorage.removeItem(itemcategoryKey);\r\n    localStorage.removeItem(spicelevelKey);\r\n\r\n    const { id: mealItemId } = this.props.match.params;\r\n    const [itemcategories, Lavels] = await axios.all([getItemCategories(), getSpiceLevels()]);\r\n\r\n    this.setState({ Lavels, Imported, itemcategories });\r\n    if (mealItemId.startsWith(\"view\")) {\r\n      const id = mealItemId.substring(4);\r\n\r\n      const isView = mealItemId.endsWith(\"&\");\r\n      let result;\r\n      if (isView) result = await getMealItem(id);\r\n      // else result = await getTrackedVersion(id);\r\n      this.setState({ data: this.mapToViewModel(result.data.Result) });\r\n      return;\r\n    }\r\n    if (mealItemId === \"new\") return;\r\n    const { data } = await getMealItem(mealItemId);\r\n    this.setState({ data: this.mapToViewModel(data.Result) });\r\n  }\r\n\r\n  mapToViewModel = x => {\r\n    return {\r\n      Id: x.Id,\r\n      CustomerId: x.CustomerId,\r\n      SpiceLevelIdFK: x.SpiceLevelIdFK,\r\n      ItemCategoryIdFK: x.ItemCategoryIdFK,\r\n      ItemName: x.ItemName,\r\n      ItemPrice: x.ItemPrice,\r\n      CaloriesCount: x.CaloriesCount,\r\n      Description: x.Description,\r\n      IsVegetarian: x.IsVegetarian,\r\n      IsHalal: x.IsHalal\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    const mealItem = { ...data };\r\n    // mealItem.Imported = !!data.Imported;\r\n    try {\r\n      await saveMealItem(mealItem);\r\n      this.props.history.push(\"/mealItem_list\");\r\n    } catch (err) {\r\n      toast.error(err.message || err.response.message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data, Imported, Lavels, itemcategories } = this.state;\r\n\r\n    const { id: mealItemId } = this.props.match.params;\r\n    const isView = mealItemId.startsWith(\"view\");\r\n    const CRUDType = mealItemId === \"new\" ? \"Create\" : \"Update\";\r\n    return (\r\n      <div>\r\n        <h1>\r\n          {!isView && <TranslateText defaultText={CRUDType} resourceId={`lbl_${CRUDType}`} />}\r\n\r\n          <TranslateText defaultText=\" Meal Item\" resourceId=\"lbl_MealItem\" />\r\n        </h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <Col>\r\n              {this.renderInput(\"CustomerId\", \"Customer Id\")}\r\n              {this.renderInput(\"ItemName\", \"Item Name\")}\r\n              {this.renderInput(\"ItemPrice\", \"Item Price\")}\r\n              {this.renderInput(\"CaloriesCount\", \"Calories Count\")}\r\n            </Col>\r\n            <Col>\r\n              {this.renderInput(\"Description\", \"Description\")}\r\n\r\n              {this.renderCheckBox(\"IsVegetarian\", \"Is Vegetarian\")}\r\n              {this.renderCheckBox(\"IsHalal\", \"Is Halal\")}\r\n\r\n              {this.renderSelect(\"SpiceLevelIdFK\", \"Spice Level\", Lavels)}\r\n              {this.renderSelect(\"ItemCategoryIdFK\", \"Item Category\", itemcategories)}\r\n              {this.renderButton(\"Save\")}\r\n            </Col>\r\n          </Row>\r\n          {/* {this.renderInput(\"Id\", \"Id\")} */}\r\n        </form>\r\n        {CRUDType === \"Update\" && (\r\n          <Row>\r\n            <Col>{!isView && <AttachmentList {...this.props} RecordId={mealItemId} ModuleName=\"mealItem\" />}</Col>\r\n            <Col>\r\n              {!isView && (\r\n                <Attachment {...this.props} RecordId={mealItemId} path={\"mealItem_list\"} ModuleName=\"mealItem\" />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MealItemForm;\r\n"],"sourceRoot":""}