{"version":3,"sources":["services/authService.js","common/languagesCombo.jsx","components/navMenu.jsx","appRoutes.jsx","common/translateText.jsx","services/httpService.js","services/translationServices.js","utils/tokenUtils.js"],"names":["SignIn","auth","a","localStorage","clear","credentials","UserName","username","Password","password","http","post","data","console","log","tokenUtil","setToken","Token","loginUtil","setLoginResponse","SignOut","removeToken","removeLoginResponse","translationButton","Component","constructor","props","super","handleSelect","id","tService","setCurrentLocale","this","onLocaleChange","toggle","setState","dropdownOpen","state","renderLocaleName","locales","localeId","_","find","LocaleId","LocalizedName","componentDidMount","getLocales","render","Dropdown","isOpen","DropdownToggle","nav","caret","defaultText","resourceId","DropdownMenu","DropdownItem","onClick","map","x","key","Id","NavMenu","useState","setIsOpen","className","Navbar","color","light","expand","to","NavbarToggler","Collapse","navbar","Nav","ChangeHistory","lazy","ItemCategories","periPeriBox","ItemCategoryForm","MealBoxes","MealBoxForm","MealBoxItems","MealBoxItemForm","MealItems","MealItemForm","MealItemSensitivities","MealItemSensitivityForm","SensitiveContents","SensitiveContentForm","SpiceLevels","SpiceLevelForm","OrderForm","AppRoutes","React","handleLocaleChange","role","fallback","path","component","TranslateText","translatedText","setTranslatedText","getCurrentLocale","useEffect","getTranslationForResource","replace","Text","translateText","setJwt","jwt","axios","defaults","headers","common","Authorization","baseURL","serverURL","interceptors","response","use","error","status","message","toast","Promise","reject","get","patch","put","delete","ApiEndpoint","CurrentLocaleId","getLocalesFromAPI","getLocalesFromCache","item","getItem","JSON","parse","setLocalesIntoCache","obj","setItem","stringify","getResourceFromCache","getResourceTranslationsFromAPI","setResourcesTranslationsIntoCache","Result","translation","Translated","TranslatedText","resourceEndpoint","translations","length","forEach","ResourceId","currentlocaleId","cacheUtil","setCache","getToken","getCache","removeCache"],"mappings":"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","file":"static/js/25.dea7be23.chunk.js","sourcesContent":["import http, { setJwt } from \"./httpService\";\r\nimport tokenUtil from \"../utils/tokenUtils\";\r\nimport loginUtil from \"../utils/loginUtils\";\r\n\r\nconst endpoint = \"/Login\";\r\n\r\nexport async function SignIn(auth) {\r\n  localStorage.clear();\r\n  const credentials = { UserName: auth.username, Password: auth.password };\r\n  const { data } = await http.post(`${endpoint}/Auth2`, credentials);\r\n  console.log(\"TCL: SignIn -> data\", data);\r\n  tokenUtil.setToken(data.Token);\r\n  loginUtil.setLoginResponse(data);\r\n}\r\n\r\nfunction SignInWithJWT(jwt) {\r\n  // It will be used in the registration or signup\r\n  tokenUtil.setToken(jwt);\r\n  setJwt(jwt);\r\n}\r\n\r\nexport function SignOut() {\r\n  tokenUtil.removeToken();\r\n  loginUtil.removeLoginResponse();\r\n}\r\n\r\nexport default {\r\n  SignOut,\r\n  SignIn,\r\n  SignInWithJWT\r\n};\r\n","// Please add this file to portal an copy as it is to new applictation\r\nimport React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport tService from \"../services/translationServices\";\r\nimport TranslateText from \"./translateText\";\r\n\r\nclass translationButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      locales: []\r\n    };\r\n  }\r\n\r\n  // TOPFB\r\n  async componentDidMount() {\r\n    const locales = await tService.getLocales();\r\n    this.setState({ locales });\r\n    this.handleSelect(this.props.localeId);\r\n  }\r\n\r\n  // TOPFB\r\n  handleSelect = id => {\r\n    tService.setCurrentLocale(id);\r\n    this.props.onLocaleChange(id);\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  };\r\n\r\n  renderLocaleName = () => {\r\n    const { locales } = this.state;\r\n    const { localeId } = this.props;\r\n    if (localeId === \"en-uk\") return \"English\";\r\n    return _.find(locales, { LocaleId: localeId }).LocalizedName;\r\n  };\r\n\r\n  render() {\r\n    const { locales, dropdownOpen } = this.state;\r\n    if (!locales) return null;\r\n    return (\r\n      <Dropdown isOpen={dropdownOpen} toggle={this.toggle}>\r\n        <DropdownToggle nav caret>\r\n          <TranslateText defaultText=\"Language\" resourceId=\"lbl_Language\" />:\r\n          {this.renderLocaleName()}\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={() => this.handleSelect(\"en-uk\")}>\r\n            English\r\n          </DropdownItem>\r\n          {locales &&\r\n            locales.map(x => (\r\n              <DropdownItem\r\n                key={x.Id}\r\n                onClick={() => this.handleSelect(x.LocaleId)}\r\n              >\r\n                {x.LocalizedName}\r\n              </DropdownItem>\r\n            ))}\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default translationButton;\r\n","// code generated @DevUp using PlatformBuilder, 04/01/2020 14:16:21\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav\r\n  // UncontrolledDropdown,\r\n  // DropdownToggle,\r\n  // DropdownMenu,\r\n  // DropdownItem\r\n} from \"reactstrap\";\r\nimport LanguageCombo from \"../common/languagesCombo\";\r\nimport TranslateText from \"../common/translateText\";\r\nimport { SignOut } from \"../services/authService\";\r\n\r\nconst NavMenu = ({ localeId, onLocaleChange }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className=\"text-center font-weight-bold\">\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavLink className=\"navbar-brand nav-item nav-link\" to=\"/\">\r\n          <TranslateText defaultText=\"Fast Food \" resourceId=\"lbl_Fast_Food\" />\r\n          <TranslateText defaultText=\"Store\" resourceId=\"lbl_Store\" />\r\n        </NavLink>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto justify-content-center\" navbar>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/periPeriBox_List\">\r\n              <TranslateText defaultText=\"Meal Boxs\" resourceId=\"lbl_Meal_Boxs\" />\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/ItemCategory_list\">\r\n              <TranslateText defaultText=\"Item Category\" resourceId=\"lbl_Item_Category\" />\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/mealBox_list\">\r\n              <TranslateText defaultText=\"Meal Box\" resourceId=\"lbl_Meal_Box\" />\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/mealBoxItem_list\">\r\n              <TranslateText defaultText=\"Meal Box Item\" resourceId=\"lbl_meal_Box_Item\" />\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/mealItemSensitivity_list\">\r\n              <TranslateText defaultText=\"Meal Item Sensitivity\" resourceId=\"lbl_MealItemSensitivity\" />\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/sensitiveContent_list\">\r\n              <TranslateText defaultText=\"Sensitive Content\" resourceId=\"lbl_SensitiveContent\" />\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/mealItem_list\">\r\n              <TranslateText defaultText=\"Meal Item\" resourceId=\"lbl_MealItems\" />\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/spiceLevel_list\">\r\n              <TranslateText defaultText=\"spice Level\" resourceId=\"lbl_spiceLevel\" />\r\n            </NavLink>\r\n\r\n            <LanguageCombo localeId={localeId} onLocaleChange={onLocaleChange} />\r\n\r\n            <NavLink className=\"nav-item nav-link\" onClick={() => SignOut()} to=\"/\">\r\n              <TranslateText defaultText=\"Log Out\" resourceId=\"lbl_spiceLevel\" />\r\n            </NavLink>\r\n            {/* <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                <TranslateText defaultText=\"Settings\" resourceId=\"lbl_Settings\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  <TranslateText defaultText=\"Profile\" resourceId=\"lbl_Profile\" />\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  <TranslateText defaultText=\"Privacy\" resourceId=\"lbl_Privacy\" />\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  <TranslateText defaultText=\"Log Out\" resourceId=\"lbl_Log_Out\" />\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown> */}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Loading from \"./common/loading\";\r\nimport NavMenu from \"./components/navMenu\";\r\n// // [PFB_ImportModelComponent]\r\n\r\n// load route components lazily\r\nconst ChangeHistory = lazy(() => import(\"./components/changes_list\"));\r\nconst ItemCategories = lazy(() => import(\"./components/ItemCategory_list\"));\r\nconst periPeriBox = lazy(() => import(\"./components/periPeriBox_List\"));\r\nconst ItemCategoryForm = lazy(() => import(\"./forms/ItemCategoryForm\"));\r\nconst MealBoxes = lazy(() => import(\"./components/mealBox_list\"));\r\nconst MealBoxForm = lazy(() => import(\"./forms/mealBoxForm\"));\r\nconst MealBoxItems = lazy(() => import(\"./components/mealBoxItem_list\"));\r\nconst MealBoxItemForm = lazy(() => import(\"./forms/mealBoxItemForm\"));\r\nconst MealItems = lazy(() => import(\"./components/mealItem_list\"));\r\nconst MealItemForm = lazy(() => import(\"./forms/mealItemForm\"));\r\nconst MealItemSensitivities = lazy(() => import(\"./components/mealItemSensitivity_list\"));\r\nconst MealItemSensitivityForm = lazy(() => import(\"./forms/mealItemSensitivityForm\"));\r\nconst SensitiveContents = lazy(() => import(\"./components/sensitiveContent_list\"));\r\nconst SensitiveContentForm = lazy(() => import(\"./forms/sensitiveContentForm\"));\r\nconst SpiceLevels = lazy(() => import(\"./components/spiceLevel_list\"));\r\nconst SpiceLevelForm = lazy(() => import(\"./forms/spiceLevelForm\"));\r\nconst OrderForm = lazy(() => import(\"./forms/OrderForm\"));\r\n\r\nclass AppRoutes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      localeId: \"en-uk\"\r\n    };\r\n  }\r\n\r\n  handleLocaleChange = localeId => {\r\n    this.setState({\r\n      localeId\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { localeId } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <NavMenu localeId={localeId} onLocaleChange={this.handleLocaleChange} />\r\n        <main role=\"main\">\r\n          <ToastContainer />\r\n          <Suspense fallback={<Loading />}>\r\n            <Switch>\r\n              <Route path=\"/changes_list/:id\" component={ChangeHistory} />\r\n              <Route path=\"/itemCategory_list/:id\" component={ItemCategoryForm} />\r\n              <Route path=\"/itemCategory_list\" component={ItemCategories} />\r\n              <Route path=\"/periPeriBox_list\" component={periPeriBox} />\r\n              <Route path=\"/mealBox_list/:id\" component={MealBoxForm} />\r\n              <Route path=\"/mealBox_list\" component={MealBoxes} />\r\n              <Route path=\"/mealBoxItem_list/:id\" component={MealBoxItemForm} />\r\n              <Route path=\"/mealBoxItem_list\" component={MealBoxItems} />\r\n              <Route path=\"/mealItem_list/:id\" component={MealItemForm} />\r\n              <Route path=\"/mealItem_list\" component={MealItems} />\r\n              <Route path=\"/mealItemSensitivity_list/:id\" component={MealItemSensitivityForm} />\r\n              <Route path=\"/mealItemSensitivity_list\" component={MealItemSensitivities} />\r\n              <Route path=\"/sensitiveContent_list/:id\" component={SensitiveContentForm} />\r\n              <Route path=\"/sensitiveContent_list\" component={SensitiveContents} />\r\n              <Route path=\"/spiceLevel_list/:id\" component={SpiceLevelForm} />\r\n              <Route path=\"/OrderForm\" component={OrderForm} />\r\n\r\n              <Route path=\"/spiceLevel_list\" component={SpiceLevels} />\r\n            </Switch>\r\n          </Suspense>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AppRoutes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport tService from \"../services/translationServices\";\r\n\r\nconst TranslateText = ({ defaultText, resourceId }) => {\r\n  const [translatedText, setTranslatedText] = useState(defaultText);\r\n  const localeId = tService.getCurrentLocale();\r\n  useEffect(() => {\r\n    const translateText = async () => {\r\n      const Text = await tService.getTranslationForResource(\r\n        resourceId.replace(/\\s+/g, \"_\"),\r\n        defaultText\r\n      );\r\n\r\n      setTranslatedText(Text);\r\n    };\r\n    if (localeId !== \"en-uk\") translateText(defaultText, resourceId);\r\n    else setTranslatedText(defaultText);\r\n  }, [defaultText, localeId, resourceId]);\r\n  return <span>{translatedText || defaultText}</span>;\r\n};\r\n\r\nexport default TranslateText;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { serverURL } from \"../config.json\";\r\n\r\naxios.defaults.baseURL = serverURL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const ExpectedError = error.response && error.response.status >= 400 && error.response.status < 500;\r\n\r\n  if (!ExpectedError) {\r\n    console.error(\"Error:\", error.message);\r\n    toast.error(error.message || \"Network Error\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport function setJwt(jwt) {\r\n  axios.defaults.headers.common.Authorization = `Bearer ${jwt}`;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  patch: axios.patch,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","// this class will be added to templete and copied as it is to new application\r\nimport http from \"./httpService\";\r\n\r\nconst ApiEndpoint = \"http://86.14.11.234/TranslationManagementWAPI/wapi\";\r\nconst localeKey = \"__locales__\";\r\nlet CurrentLocaleId = \"en-uk\";\r\n\r\nfunction getLocalesFromAPI() {\r\n  return http.get(`${ApiEndpoint}/locale/locales`);\r\n}\r\n\r\nfunction getLocalesFromCache() {\r\n  const item = localStorage.getItem(localeKey);\r\n  return JSON.parse(item);\r\n}\r\n\r\nfunction setLocalesIntoCache(obj) {\r\n  localStorage.setItem(localeKey, JSON.stringify(obj));\r\n  return obj;\r\n}\r\nfunction setCurrentLocale(currentlocaleId) {\r\n  CurrentLocaleId = currentlocaleId;\r\n}\r\n\r\nfunction getCurrentLocale() {\r\n  return CurrentLocaleId;\r\n}\r\n// TOPFB\r\nasync function getTranslationForResource(resourceId, defaultText) {\r\n  const translationFromCache = getResourceFromCache(resourceId);\r\n  if (!translationFromCache) {\r\n    const { data: translations } = await getResourceTranslationsFromAPI(defaultText, resourceId, CurrentLocaleId);\r\n\r\n    setResourcesTranslationsIntoCache(translations.Result);\r\n  }\r\n  const translation = getResourceFromCache(resourceId);\r\n  return translation && translation.Translated ? translation.TranslatedText : defaultText;\r\n}\r\n\r\nasync function getLocales() {\r\n  let locales = getLocalesFromCache();\r\n  if (!locales) {\r\n    const { data } = await getLocalesFromAPI();\r\n    locales = setLocalesIntoCache(data.Result);\r\n  }\r\n  return locales;\r\n}\r\n\r\nfunction getResourceTranslationsFromAPI(defaultText, resourceId, localeId) {\r\n  const resourceEndpoint = `${ApiEndpoint}/LocalResouce/TranslationsByLocale?systemName=defaultSystem&moduleName=defaultModule&localeId=${localeId}&englishText=${defaultText}&resourceId=${resourceId}`;\r\n  return http.post(resourceEndpoint);\r\n}\r\n\r\nfunction getResourceFromCache(resourceId) {\r\n  const item = localStorage.getItem(`${resourceId}_${CurrentLocaleId}`);\r\n  return JSON.parse(item);\r\n}\r\n\r\nfunction setResourcesTranslationsIntoCache(translations) {\r\n  if (!(translations && translations.length)) return;\r\n  translations.forEach(translation => {\r\n    localStorage.setItem(`${translation.ResourceId}_${translation.LocaleId}`, JSON.stringify(translation));\r\n  });\r\n}\r\n\r\nexport default {\r\n  getLocales,\r\n  getTranslationForResource,\r\n  setCurrentLocale,\r\n  getCurrentLocale\r\n};\r\n","import cacheUtil from \"./cacheUtils\";\r\n\r\nconst tokenKey = \"__token__\";\r\n\r\nfunction setToken(jwt) {\r\n  cacheUtil.setCache(tokenKey, jwt);\r\n}\r\n\r\nfunction getToken() {\r\n  return cacheUtil.getCache(tokenKey);\r\n}\r\n\r\nfunction removeToken() {\r\n  cacheUtil.removeCache(tokenKey);\r\n}\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken\r\n};\r\n"],"sourceRoot":""}